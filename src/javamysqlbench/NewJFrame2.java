/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javamysqlbench;

import java.sql.DatabaseMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLSyntaxErrorException;
import java.sql.Statement;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author felipe
 */
public class NewJFrame2 extends javax.swing.JFrame {
    
    private Connection con;
    private Statement stmt;
    private ResultSet rs;
    private String query; 
    private DatabaseMetaData md;
    
    private String login;
    private String password;
    private String database;
    
    private Boolean foiEscrita = false;
    
    DefaultTreeModel modelo;

    /**
     * Creates new form NewJFrame2
     */
    public NewJFrame2() {
                
        initComponents();   
    }
    DefaultMutableTreeNode t_tabelas = new DefaultMutableTreeNode("Tabelas");
    public void load_tree(){
        try{
            login = JavaMySQLBench.login;
            password = JavaMySQLBench.password;
            database = JavaMySQLBench.database;
            
            String url = "jdbc:mysql://localhost/"+database;
            con = DriverManager.getConnection(url, login, password);
            stmt = con.createStatement();
            md = con.getMetaData();
            String[] types = {"TABLE"};

                //ResultSet tabelas = md.getTables("university", null, "%", types);
                ResultSet tabelas = md.getTables(database, null, "%", types);
                //pegando as tabelas "%" do banco "university"         
                ResultSet colunas;
                while (tabelas.next()) {
                    DefaultMutableTreeNode t_xtabela = new DefaultMutableTreeNode(tabelas.getString("TABLE_NAME"));
                    //cria nó representando uma tabela
                    colunas = stmt.executeQuery("show columns from " + tabelas.getString("TABLE_NAME"));
                    //Recebendo lista de colunas
                    while (colunas.next()) {
                        t_xtabela.add(new DefaultMutableTreeNode(colunas.getString(1)));
                        //criando nós representando os campos

                    }
                    t_tabelas.add(t_xtabela);
                }
        }
        catch(SQLException sqle){
            System.out.println("erro bd: "+sqle);
        }
             
               
                modelo = (DefaultTreeModel) tree_tabelas.getModel();
                modelo.setRoot(t_tabelas);
                tree_tabelas.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ExecuteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaQuery = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        ResultsTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tree_tabelas = new javax.swing.JTree();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ExecuteButton.setText("Execute");
        ExecuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Results");

        TextAreaQuery.setColumns(20);
        TextAreaQuery.setRows(5);
        jScrollPane1.setViewportView(TextAreaQuery);

        ResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(ResultsTable);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        tree_tabelas.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane4.setViewportView(tree_tabelas);
        //load_tree();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ExecuteButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ExecuteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteButtonActionPerformed
        // TODO add your handling code here:
        
        // TODO add your handling code here:
        try {
            login = JavaMySQLBench.login;
            password = JavaMySQLBench.password;
            database = JavaMySQLBench.database;
            
            String url = "jdbc:mysql://localhost/"+database;//"test_db";
            /*
            String user = "root";
            String password = "felipinho@Fedora123";*/
            con = DriverManager.getConnection(url, login, password);
        }catch(SQLException sqle){
            System.out.println("erro bd: "+sqle);
        }
        
        
        query = this.TextAreaQuery.getText();
                
        try {
            
            
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            
            rs = stmt.executeQuery(query);
            
            ResultSetMetaData rsmd = rs.getMetaData();
            
            int column_count = rsmd.getColumnCount();
            
            
            
            
            
            if(rs.next()){
                DefaultTableModel model = new DefaultTableModel();
                
                String results[] = {"", "", "", "", "", "", "", "", "", "", "", "", ""};
                
                for(int i = 1; i<=column_count; i++) {
                    //results[i] = rsmd.getColumnName(i);
                    model.addColumn(rsmd.getColumnName(i));
                    //System.out.println(rsmd.getColumnName(i));
                }
                
                
                while(rs.next()){
                    for(int i=1; i<=column_count; i++){
                        //System.out.println(rs.getString(i));
                        results[i-1]=rs.getString(i);
                        //results.add(rs.getString(i));
                    }
                
                    model.addRow(results);
                }
                
                
                
                ResultsTable.setModel(model);
            }
            
        }catch (SQLSyntaxErrorException sqlsyntaxerror){
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("MySQL Syntax Error");
            String[]errors = {""};
            //System.out.println(sqlsyntaxerror.getMessage());
            //errors[0] = sqlsyntaxerror.toString();
            errors[0] = sqlsyntaxerror.getMessage();
            model.addRow(errors);
            ResultsTable.setModel(model);
        } catch (SQLException sqle){
            
            if(sqle.getErrorCode() == 0) {
                //int rs = stmt.executeUpdate(query);
                foiEscrita = true;
            }else{
                JOptionPane.showMessageDialog(null,sqle.toString());
                //System.out.println("numero do erro "++"\n erro sql: " + sqle);
            }
                      
        }
        
        if (foiEscrita){
            DefaultTableModel model = new DefaultTableModel();
            
            String[]cols = {""};
            //System.out.println(sqlsyntaxerror.getMessage());
            //errors[0] = sqlsyntaxerror.toString();
            
            
            
            try{
                stmt = con.createStatement(rs.TYPE_SCROLL_INSENSITIVE, rs.CONCUR_READ_ONLY);
                int updateResult  = stmt.executeUpdate(query);
                model.addColumn("MySQL");
                cols[0] = "Query executed! Code: " + updateResult;
            }catch(SQLException sqle){
                //JOptionPane.showMessageDialog(null,sqle.toString());
                model.addColumn("Exception");
                cols[0] = sqle.getMessage();
            }
            
            model.addRow(cols);
            ResultsTable.setModel(model);
            
        }
        
        foiEscrita = false;
    }//GEN-LAST:event_ExecuteButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExecuteButton;
    private javax.swing.JTable ResultsTable;
    private javax.swing.JTextArea TextAreaQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTree tree_tabelas;
    // End of variables declaration//GEN-END:variables
}
